[{"C:\\Users\\jambr\\OneDrive\\Bootcamp\\Challenges\\search-a-book\\client\\src\\index.js":"1","C:\\Users\\jambr\\OneDrive\\Bootcamp\\Challenges\\search-a-book\\client\\src\\App.js":"2","C:\\Users\\jambr\\OneDrive\\Bootcamp\\Challenges\\search-a-book\\client\\src\\pages\\SavedBooks.js":"3","C:\\Users\\jambr\\OneDrive\\Bootcamp\\Challenges\\search-a-book\\client\\src\\pages\\SearchBooks.js":"4","C:\\Users\\jambr\\OneDrive\\Bootcamp\\Challenges\\search-a-book\\client\\src\\components\\Navbar.js":"5","C:\\Users\\jambr\\OneDrive\\Bootcamp\\Challenges\\search-a-book\\client\\src\\components\\SignupForm.js":"6","C:\\Users\\jambr\\OneDrive\\Bootcamp\\Challenges\\search-a-book\\client\\src\\components\\LoginForm.js":"7","C:\\Users\\jambr\\OneDrive\\Bootcamp\\Challenges\\search-a-book\\client\\src\\utils\\localStorage.js":"8","C:\\Users\\jambr\\OneDrive\\Bootcamp\\Challenges\\search-a-book\\client\\src\\utils\\API.js":"9","C:\\Users\\jambr\\OneDrive\\Bootcamp\\Challenges\\search-a-book\\client\\src\\utils\\auth.js":"10","C:\\Users\\jambr\\OneDrive\\Bootcamp\\Challenges\\search-a-book\\client\\src\\utils\\queries.js":"11","C:\\Users\\jambr\\OneDrive\\Bootcamp\\Challenges\\search-a-book\\client\\src\\utils\\mutations.js":"12"},{"size":278,"mtime":1652997528575,"results":"13","hashOfConfig":"14"},{"size":1302,"mtime":1653858067274,"results":"15","hashOfConfig":"14"},{"size":3891,"mtime":1653860353035,"results":"16","hashOfConfig":"14"},{"size":5139,"mtime":1653858659689,"results":"17","hashOfConfig":"14"},{"size":2601,"mtime":1652997528574,"results":"18","hashOfConfig":"14"},{"size":3891,"mtime":1653860521838,"results":"19","hashOfConfig":"14"},{"size":2979,"mtime":1653860557254,"results":"20","hashOfConfig":"14"},{"size":823,"mtime":1652997528579,"results":"21","hashOfConfig":"14"},{"size":1449,"mtime":1652997528578,"results":"22","hashOfConfig":"14"},{"size":1303,"mtime":1653506417232,"results":"23","hashOfConfig":"14"},{"size":282,"mtime":1653858295833,"results":"24","hashOfConfig":"14"},{"size":941,"mtime":1653859945934,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"d1d9tk",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":5,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":1,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":4,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":3,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jambr\\OneDrive\\Bootcamp\\Challenges\\search-a-book\\client\\src\\index.js",[],["55","56"],"C:\\Users\\jambr\\OneDrive\\Bootcamp\\Challenges\\search-a-book\\client\\src\\App.js",[],"C:\\Users\\jambr\\OneDrive\\Bootcamp\\Challenges\\search-a-book\\client\\src\\pages\\SavedBooks.js",["57","58","59","60","61","62","63","64","65","66","67"],"import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { QUERY_ME } from \"../utils/queries\";\r\nimport {\r\n  Jumbotron,\r\n  Container,\r\n  CardColumns,\r\n  Card,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { REMOVE_BOOK } from \"../utils/mutations\";\r\n\r\nimport { getMe, deleteBook } from \"../utils/API\";\r\nimport Auth from \"../utils/auth\";\r\nimport { removeBookId } from \"../utils/localStorage\";\r\n\r\nconst SavedBooks = () => {\r\n  const { username: userParam } = useParams();\r\n  const { loading, data } = useQuery(QUERY_ME, {\r\n    variables: { username: userParam },\r\n  });\r\n\r\n  const user = data?.me || data?.user || {};\r\n  const savedBooks = data?.savedBooks || [];\r\n  console.log(savedBooks);\r\n\r\n  const [userData, setUserData] = useState({});\r\n\r\n  // use this to determine if `useEffect()` hook needs to run again\r\n  const userDataLength = Object.keys(userData).length;\r\n\r\n  // useEffect(() => {\r\n  //   const getUserData = async () => {\r\n  //     try {\r\n  //       const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n  //       if (!token) {\r\n  //         return false;\r\n  //       }\r\n\r\n  //       const response = await getMe(token);\r\n\r\n  //       if (!response.ok) {\r\n  //         throw new Error(\"something went wrong!\");\r\n  //       }\r\n\r\n  //       const user = await response.json();\r\n  //       setUserData(user);\r\n  //     } catch (err) {\r\n  //       console.error(err);\r\n  //     }\r\n  //   };\r\n\r\n  //   getUserData();\r\n  // }, [userDataLength]);\r\n\r\n  // create function that accepts the book's mongo _id value as param and deletes the book from the database\r\n  const handleDeleteBook = async (bookId) => {\r\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n    if (!token) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const [removeBook] = await useMutation(REMOVE_BOOK, {\r\n        variables: { removeBook: _id },\r\n        onCompleted: (data) => {},\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"something went wrong!\");\r\n      }\r\n\r\n      const updatedUser = await response.json();\r\n      setUserData(updatedUser);\r\n      // upon success, remove book's id from localStorage\r\n      removeBookId(bookId);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // if data isn't here yet, say so\r\n  if (!userDataLength) {\r\n    return <h2>LOADING...</h2>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Jumbotron fluid className=\"text-light bg-dark\">\r\n        <Container>\r\n          <h1>Viewing saved books!</h1>\r\n        </Container>\r\n      </Jumbotron>\r\n      <Container>\r\n        <h2>\r\n          {userData.savedBooks.length\r\n            ? `Viewing ${userData.savedBooks.length} saved ${\r\n                userData.savedBooks.length === 1 ? \"book\" : \"books\"\r\n              }:`\r\n            : \"You have no saved books!\"}\r\n        </h2>\r\n        <CardColumns>\r\n          {userData.savedBooks.map((book) => {\r\n            return (\r\n              <Card key={book.bookId} border=\"dark\">\r\n                {book.image ? (\r\n                  <Card.Img\r\n                    src={book.image}\r\n                    alt={`The cover for ${book.title}`}\r\n                    variant=\"top\"\r\n                  />\r\n                ) : null}\r\n                <Card.Body>\r\n                  <Card.Title>{book.title}</Card.Title>\r\n                  <p className=\"small\">Authors: {book.authors}</p>\r\n                  <Card.Text>{book.description}</Card.Text>\r\n                  <Button\r\n                    className=\"btn-block btn-danger\"\r\n                    onClick={() => handleDeleteBook(book.bookId)}\r\n                  >\r\n                    Delete this Book!\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n        </CardColumns>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SavedBooks;\r\n","C:\\Users\\jambr\\OneDrive\\Bootcamp\\Challenges\\search-a-book\\client\\src\\pages\\SearchBooks.js",["68","69","70","71","72"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Jumbotron,\r\n  Container,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Card,\r\n  CardColumns,\r\n} from \"react-bootstrap\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { SAVE_BOOK } from \"../utils/mutations\";\r\nimport Auth from \"../utils/auth\";\r\nimport { saveBook, searchGoogleBooks } from \"../utils/API\";\r\nimport { saveBookIds, getSavedBookIds } from \"../utils/localStorage\";\r\n\r\nconst SearchBooks = () => {\r\n  // create state for holding returned google api data\r\n  const [searchedBooks, setSearchedBooks] = useState([]);\r\n  // create state for holding our search field data\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n\r\n  // create state to hold saved bookId values\r\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\r\n\r\n  // set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\r\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\r\n  const [saveBook, { error }] = useMutation(SAVE_BOOK);\r\n  // create method to search for books and set state on form submit\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!searchInput) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const response = await searchGoogleBooks(searchInput);\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"something went wrong!\");\r\n      }\r\n\r\n      const { items } = await response.json();\r\n\r\n      const bookData = items.map((book) => ({\r\n        bookId: book.id,\r\n        authors: book.volumeInfo.authors || [\"No author to display\"],\r\n        title: book.volumeInfo.title,\r\n        description: book.volumeInfo.description,\r\n        image: book.volumeInfo.imageLinks?.thumbnail || \"\",\r\n      }));\r\n\r\n      setSearchedBooks(bookData);\r\n      setSearchInput(\"\");\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // create function to handle saving a book to our database\r\n  const handleSaveBook = async (bookId) => {\r\n    // find the book in `searchedBooks` state by the matching id\r\n    const bookToSave = searchedBooks.find((book) => book.bookId === bookId);\r\n\r\n    // get token\r\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n    if (!token) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const response = await saveBook({\r\n        variables: { headers },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"something went wrong!\");\r\n      }\r\n\r\n      // if book successfully saves to user's account, save book id to state\r\n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Jumbotron fluid className=\"text-light bg-dark\">\r\n        <Container>\r\n          <h1>Search for Books!</h1>\r\n          <Form onSubmit={handleFormSubmit}>\r\n            <Form.Row>\r\n              <Col xs={12} md={8}>\r\n                <Form.Control\r\n                  name=\"searchInput\"\r\n                  value={searchInput}\r\n                  onChange={(e) => setSearchInput(e.target.value)}\r\n                  type=\"text\"\r\n                  size=\"lg\"\r\n                  placeholder=\"Search for a book\"\r\n                />\r\n              </Col>\r\n              <Col xs={12} md={4}>\r\n                <Button type=\"submit\" variant=\"success\" size=\"lg\">\r\n                  Submit Search\r\n                </Button>\r\n              </Col>\r\n            </Form.Row>\r\n          </Form>\r\n        </Container>\r\n      </Jumbotron>\r\n\r\n      <Container>\r\n        <h2>\r\n          {searchedBooks.length\r\n            ? `Viewing ${searchedBooks.length} results:`\r\n            : \"Search for a book to begin\"}\r\n        </h2>\r\n        <CardColumns>\r\n          {searchedBooks.map((book) => {\r\n            return (\r\n              <Card key={book.bookId} border=\"dark\">\r\n                {book.image ? (\r\n                  <Card.Img\r\n                    src={book.image}\r\n                    alt={`The cover for ${book.title}`}\r\n                    variant=\"top\"\r\n                  />\r\n                ) : null}\r\n                <Card.Body>\r\n                  <Card.Title>{book.title}</Card.Title>\r\n                  <p className=\"small\">Authors: {book.authors}</p>\r\n                  <Card.Text>{book.description}</Card.Text>\r\n                  {Auth.loggedIn() && (\r\n                    <Button\r\n                      disabled={savedBookIds?.some(\r\n                        (savedBookId) => savedBookId === book.bookId\r\n                      )}\r\n                      className=\"btn-block btn-info\"\r\n                      onClick={() => handleSaveBook(book.bookId)}\r\n                    >\r\n                      {savedBookIds?.some(\r\n                        (savedBookId) => savedBookId === book.bookId\r\n                      )\r\n                        ? \"This book has already been saved!\"\r\n                        : \"Save this Book!\"}\r\n                    </Button>\r\n                  )}\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n        </CardColumns>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBooks;\r\n","C:\\Users\\jambr\\OneDrive\\Bootcamp\\Challenges\\search-a-book\\client\\src\\components\\Navbar.js",[],"C:\\Users\\jambr\\OneDrive\\Bootcamp\\Challenges\\search-a-book\\client\\src\\components\\SignupForm.js",["73","74","75","76","77","78"],"import React, { useState } from \"react\";\r\nimport { Form, Button, Alert } from \"react-bootstrap\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { ADD_USER } from \"../utils/mutations\";\r\n\r\nimport Auth from \"../utils/auth\";\r\n\r\nconst SignupForm = () => {\r\n  // set initial form state\r\n  const [userFormData, setUserFormData] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  // set state for form validation\r\n  const [validated] = useState(false);\r\n  // set state for alert\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const [addUser, { error }] = useMutation(ADD_USER);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserFormData({ ...userFormData, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // check if form has everything (as per react-bootstrap docs)\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    try {\r\n      const [addUser] = await useMutation(ADD_USER, {\r\n        variables: { addUser: _id },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"something went wrong!\");\r\n      }\r\n\r\n      const { token, user } = await response.json();\r\n      console.log(user);\r\n      Auth.login(token);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setShowAlert(true);\r\n    }\r\n\r\n    setUserFormData({\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* This is needed for the validation functionality above */}\r\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n        {/* show alert if server response is bad */}\r\n        <Alert\r\n          dismissible\r\n          onClose={() => setShowAlert(false)}\r\n          show={showAlert}\r\n          variant=\"danger\"\r\n        >\r\n          Something went wrong with your signup!\r\n        </Alert>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor=\"username\">Username</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Your username\"\r\n            name=\"username\"\r\n            onChange={handleInputChange}\r\n            value={userFormData.username}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Username is required!\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Your email address\"\r\n            name=\"email\"\r\n            onChange={handleInputChange}\r\n            value={userFormData.email}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Email is required!\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Your password\"\r\n            name=\"password\"\r\n            onChange={handleInputChange}\r\n            value={userFormData.password}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Password is required!\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Button\r\n          disabled={\r\n            !(\r\n              userFormData.username &&\r\n              userFormData.email &&\r\n              userFormData.password\r\n            )\r\n          }\r\n          type=\"submit\"\r\n          variant=\"success\"\r\n        >\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n      {/* not needed as its incorporated individually above? */}\r\n      {error & <div> Sign up failed</div>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignupForm;\r\n","C:\\Users\\jambr\\OneDrive\\Bootcamp\\Challenges\\search-a-book\\client\\src\\components\\LoginForm.js",["79","80","81","82","83"],"// see SignupForm.js for comments\r\nimport React, { useState } from \"react\";\r\nimport { Form, Button, Alert } from \"react-bootstrap\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { LOGIN_USER } from \"../utils/mutations\";\r\n\r\nimport Auth from \"../utils/auth\";\r\n\r\nconst LoginForm = () => {\r\n  const [userFormData, setUserFormData] = useState({ email: \"\", password: \"\" });\r\n  const [validated] = useState(false);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const [login, { error }] = useMutation(LOGIN_USER);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserFormData({ ...userFormData, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // check if form has everything (as per react-bootstrap docs)\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    try {\r\n      const loginUser = await useMutation(LOGIN_USER);\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"something went wrong!\");\r\n      }\r\n\r\n      const { token, user } = await response.json();\r\n      console.log(user);\r\n      Auth.login(token);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setShowAlert(true);\r\n    }\r\n\r\n    setUserFormData({\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n        <Alert\r\n          dismissible\r\n          onClose={() => setShowAlert(false)}\r\n          show={showAlert}\r\n          variant=\"danger\"\r\n        >\r\n          Something went wrong with your login credentials!\r\n        </Alert>\r\n        <Form.Group>\r\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Your email\"\r\n            name=\"email\"\r\n            onChange={handleInputChange}\r\n            value={userFormData.email}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Email is required!\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Your password\"\r\n            name=\"password\"\r\n            onChange={handleInputChange}\r\n            value={userFormData.password}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Password is required!\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Button\r\n          disabled={!(userFormData.email && userFormData.password)}\r\n          type=\"submit\"\r\n          variant=\"success\"\r\n        >\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n      {error && <div>login failed</div>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","C:\\Users\\jambr\\OneDrive\\Bootcamp\\Challenges\\search-a-book\\client\\src\\utils\\localStorage.js",[],"C:\\Users\\jambr\\OneDrive\\Bootcamp\\Challenges\\search-a-book\\client\\src\\utils\\API.js",[],"C:\\Users\\jambr\\OneDrive\\Bootcamp\\Challenges\\search-a-book\\client\\src\\utils\\auth.js",[],"C:\\Users\\jambr\\OneDrive\\Bootcamp\\Challenges\\search-a-book\\client\\src\\utils\\queries.js",[],"C:\\Users\\jambr\\OneDrive\\Bootcamp\\Challenges\\search-a-book\\client\\src\\utils\\mutations.js",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":1,"column":27,"nodeType":"90","messageId":"91","endLine":1,"endColumn":36},{"ruleId":"88","severity":1,"message":"92","line":14,"column":10,"nodeType":"90","messageId":"91","endLine":14,"endColumn":15},{"ruleId":"88","severity":1,"message":"93","line":14,"column":17,"nodeType":"90","messageId":"91","endLine":14,"endColumn":27},{"ruleId":"94","severity":2,"message":"95","line":19,"column":35,"nodeType":"90","messageId":"96","endLine":19,"endColumn":44},{"ruleId":"88","severity":1,"message":"97","line":20,"column":11,"nodeType":"90","messageId":"91","endLine":20,"endColumn":18},{"ruleId":"88","severity":1,"message":"98","line":24,"column":9,"nodeType":"90","messageId":"91","endLine":24,"endColumn":13},{"ruleId":"88","severity":1,"message":"99","line":67,"column":14,"nodeType":"90","messageId":"91","endLine":67,"endColumn":24},{"ruleId":"100","severity":2,"message":"101","line":67,"column":34,"nodeType":"90","endLine":67,"endColumn":45},{"ruleId":"94","severity":2,"message":"102","line":68,"column":34,"nodeType":"90","messageId":"96","endLine":68,"endColumn":37},{"ruleId":"94","severity":2,"message":"103","line":72,"column":12,"nodeType":"90","messageId":"96","endLine":72,"endColumn":20},{"ruleId":"94","severity":2,"message":"103","line":76,"column":33,"nodeType":"90","messageId":"96","endLine":76,"endColumn":41},{"ruleId":"88","severity":1,"message":"89","line":1,"column":27,"nodeType":"90","messageId":"91","endLine":1,"endColumn":36},{"ruleId":"88","severity":1,"message":"104","line":14,"column":10,"nodeType":"90","messageId":"91","endLine":14,"endColumn":18},{"ruleId":"88","severity":1,"message":"105","line":15,"column":10,"nodeType":"90","messageId":"91","endLine":15,"endColumn":21},{"ruleId":"88","severity":1,"message":"106","line":28,"column":22,"nodeType":"90","messageId":"91","endLine":28,"endColumn":27},{"ruleId":"94","severity":2,"message":"107","line":75,"column":22,"nodeType":"90","messageId":"96","endLine":75,"endColumn":29},{"ruleId":"88","severity":1,"message":"108","line":20,"column":10,"nodeType":"90","messageId":"91","endLine":20,"endColumn":17},{"ruleId":"88","severity":1,"message":"108","line":38,"column":14,"nodeType":"90","messageId":"91","endLine":38,"endColumn":21},{"ruleId":"100","severity":2,"message":"109","line":38,"column":31,"nodeType":"90","endLine":38,"endColumn":42},{"ruleId":"94","severity":2,"message":"102","line":39,"column":31,"nodeType":"90","messageId":"96","endLine":39,"endColumn":34},{"ruleId":"94","severity":2,"message":"103","line":42,"column":12,"nodeType":"90","messageId":"96","endLine":42,"endColumn":20},{"ruleId":"94","severity":2,"message":"103","line":46,"column":37,"nodeType":"90","messageId":"96","endLine":46,"endColumn":45},{"ruleId":"88","severity":1,"message":"110","line":14,"column":10,"nodeType":"90","messageId":"91","endLine":14,"endColumn":15},{"ruleId":"88","severity":1,"message":"111","line":32,"column":13,"nodeType":"90","messageId":"91","endLine":32,"endColumn":22},{"ruleId":"100","severity":2,"message":"109","line":32,"column":31,"nodeType":"90","endLine":32,"endColumn":42},{"ruleId":"94","severity":2,"message":"103","line":34,"column":12,"nodeType":"90","messageId":"96","endLine":34,"endColumn":20},{"ruleId":"94","severity":2,"message":"103","line":38,"column":37,"nodeType":"90","messageId":"96","endLine":38,"endColumn":45},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'getMe' is defined but never used.","'deleteBook' is defined but never used.","no-undef","'useParams' is not defined.","undef","'loading' is assigned a value but never used.","'user' is assigned a value but never used.","'removeBook' is assigned a value but never used.","react-hooks/rules-of-hooks","React Hook \"useMutation\" is called in function \"handleDeleteBook\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","'_id' is not defined.","'response' is not defined.","'saveBook' is defined but never used.","'saveBookIds' is defined but never used.","'error' is assigned a value but never used.","'headers' is not defined.","'addUser' is assigned a value but never used.","React Hook \"useMutation\" is called in function \"handleFormSubmit\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","'login' is assigned a value but never used.","'loginUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]